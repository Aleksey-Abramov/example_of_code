"""
Задание № 1,2,3. Определение активности, ее погрешности, сравнение с теорией.

"""
import pltinit as ini

import os
import math as m
import numpy as np
import matplotlib.pyplot as plt

import pickle

#===================================================
# Настройка графиков
#===================================================

ini.init_matplotlib(plt, IsReport=True)

#===================================================
# Исходные данные
#===================================================

f = open('LR_1_dat_act.txt','r')
f = open('R_length.txt','r')
J = np.loadtxt("LR_1_dat_act.txt", delimiter='\t', dtype=np.float) #Плотность потока частиц
R = np.loadtxt("R_length.txt", delimiter='\t', dtype=np.float) # Расстояние от блока до источника
n   =   1   # Выход частиц
kappa = 1   #Эффективность регистрации

#===================================================
# Определение активности
#===================================================

A = np.zeros([10,6])    # Активность
for j in range(0,6):
    A[:,j] = (4 * np.pi * R[j]**2 * J[:,j]) / (n*kappa)

#===================================================
# Определение погрешности определения активности
#===================================================

DELTA_R = 5e-3  # Погрешность R
m   =   10  # Количество измерений
t_st =  2.3 # Коэффициент Стьюдента
J_ave = np.mean(J, axis = 0)   # Среднее значение J
J_sub = np.zeros([10,6])
DELTA_J_op = np.zeros(np.size(J_ave))

delta_R = (DELTA_R / (R*10e-2)) * 100   # Относительная погрешность R в %

delta_J_pr = 15 + (3.5 / (J_ave/10e-4))     # Относитеьная приборная J
DELTA_J_pr = (J_ave * delta_J_pr) / 100    # Приборная погрешность J

for j in range(0,6):
    J_sub[:,j] = (J[:,j] - J_ave[j])**2

for j in range(0,6):    # Погрешность измерений J
    DELTA_J_op[j] = t_st * (np.sum(J_sub[:,j]) / (m*(m-1)))**0.5

DELTA_J = (DELTA_J_op**2 + DELTA_J_pr**2)**0.5  # Погрешность J
delta_J = (DELTA_J/J_ave) * 100     # Относительная погрешность J

delta_A = 2 * delta_R + delta_J     # Относительная погрешность A

#===================================================
# Построение теоретической зависимости J(R)
#===================================================
A_ave = np.mean(A, axis = 0)      # Среднее значение A

a = np.mean(A_ave)      # Среднее значение среднего(?)

def Th_J_r(dr):      # Теоретическая зависимость
    J_th = (a * n) / (4 * np.pi * dr**2)
    return J_th

dr = np.linspace(5,50,45)

J_theor = [Th_J_r(dd) for dd in dr]

#===================================================
# Построение графиков и вывод результатов
#===================================================

f = open("rep_average_act.txt","w")
f.write("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Плотность потока частиц (1/(см*см*с)) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n")
for i in range (0,10):
    for j in range(0,6):
        f.write("\t %.2f" % (J[i,j]))
    f.write("\n")
f.write("\n")
f.write("~~~~~~~~~~~~~ Средняя плотность потока частиц (1/(см*см*с)) ~~~~~~~~~~~\n")
for j in range(0,6):
        f.write("\t\t\t\t %.2f" % (J_ave[j]))
        f.write("\n")
f.write("\n")

f.write("~~~~~~~~~~~~~~~~~~~~~~ Активность источника (1/c) ~~~~~~~~~~~~~~~~~~~~~~\n")
for i in range (0,10):
    for j in range(0,6):
        f.write("  %.2f" % (A[i,j]))
    f.write("\n")
f.write("\n")
f.write("~~~~~~~~~~~~~~~~~~~~~~~ Погрешность эксперимента ~~~~~~~~~~~~~~~~~~~~~~~\n")
f.write("Относительная погрешность R [проц]_________________________ %.2f \n"% (np.max(delta_R)))
f.write("Абсолютная погрешность R [м]________________________________%.2f \n"% (DELTA_R))
f.write("Отноcительная приборная порешность J_pr [проц]_____________ %.2f \n"% (np.max(delta_J_pr)))
f.write("Приборная погрешность J_pr [1/(см*см*с)]____________________%.2f \n"% (np.max(DELTA_J_pr)))
f.write("Погрешность измерений J_op [1/(см*см*с)]____________________%.2f \n"% (np.max(DELTA_J_op)))
f.write("Относительная погрешность J [проц]__________________________%.2f \n"% (np.max(delta_J)))
f.write("Относительная погрешность активности A [проц]_______________%.2f \n"% (np.max(delta_A)))

fig = plt.figure()
plt.plot(dr,J_theor,color = "red", label = "Теоретическая зависимость")
for j in range (0,6):
    plt.scatter(R[j],J_ave[j])

axes = plt.gca()
axes.set_xlim([5,50])
axes.set_ylim([-0.2,5])
plt.ylabel(r"$J,1/(см*см*с)$")
plt.xlabel(r"$R,м$")
plt.tight_layout()
plt.grid(True)                         #  Сетка
plt.legend(loc = "best")
plt.savefig("pic/theor",fnt='png')
plt.show()
f.close()